// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Structure.Context;

#nullable disable

namespace Structure.Migrations
{
    [DbContext(typeof(EcoRutaContext))]
    [Migration("20250704225258_AddComentarioColumnToReportesMigration")]
    partial class AddComentarioColumnToReportesMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.AsignacionesRutum", b =>
                {
                    b.Property<int>("AsignacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AsignacionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AsignacionId"));

                    b.Property<int?>("CamionId")
                        .HasColumnType("int")
                        .HasColumnName("CamionID");

                    b.Property<int?>("ChoferId")
                        .HasColumnType("int")
                        .HasColumnName("ChoferID");

                    b.Property<int?>("HorarioId")
                        .HasColumnType("int")
                        .HasColumnName("HorarioID");

                    b.HasKey("AsignacionId")
                        .HasName("PK__Asignaci__D82B5BB7D273A5DC");

                    b.HasIndex("CamionId");

                    b.HasIndex("ChoferId");

                    b.HasIndex("HorarioId");

                    b.ToTable("AsignacionesRuta");
                });

            modelBuilder.Entity("Domain.Entities.Camione", b =>
                {
                    b.Property<int>("CamionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CamionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CamionId"));

                    b.Property<int?>("Año")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Placa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CamionId")
                        .HasName("PK__Camiones__80E86F4824E3DABF");

                    b.HasIndex(new[] { "Placa" }, "UQ__Camiones__8310F99D2A8F3164")
                        .IsUnique()
                        .HasFilter("[Placa] IS NOT NULL");

                    b.ToTable("Camiones");
                });

            modelBuilder.Entity("Domain.Entities.Chofere", b =>
                {
                    b.Property<int>("ChoferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ChoferID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChoferId"));

                    b.Property<string>("Cedula")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ChoferId")
                        .HasName("PK__Choferes__3969BEEDF8AEAB54");

                    b.HasIndex(new[] { "Cedula" }, "UQ__Choferes__B4ADFE38B403170B")
                        .IsUnique()
                        .HasFilter("[Cedula] IS NOT NULL");

                    b.ToTable("Choferes");
                });

            modelBuilder.Entity("Domain.Entities.Horario", b =>
                {
                    b.Property<int>("HorarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HorarioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HorarioId"));

                    b.Property<DateOnly?>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<TimeOnly?>("HoraLlegada")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("HoraSalida")
                        .HasColumnType("time");

                    b.Property<int?>("RutaId")
                        .HasColumnType("int")
                        .HasColumnName("RutaID");

                    b.HasKey("HorarioId")
                        .HasName("PK__Horarios__BB881A9EEE939723");

                    b.HasIndex("RutaId");

                    b.ToTable("Horarios");
                });

            modelBuilder.Entity("Domain.Entities.LogsActividad", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<string>("Accion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("FechaHora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("LogId")
                        .HasName("PK__LogsActi__5E5499A8E623DD51");

                    b.HasIndex("UsuarioId");

                    b.ToTable("LogsActividad", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Reporte", b =>
                {
                    b.Property<int>("ReporteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReporteID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReporteId"));

                    b.Property<string>("Comentario")
                        .HasColumnType("text");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pendiente");

                    b.Property<DateTime?>("FechaHora")
                        .HasColumnType("datetime");

                    b.Property<string>("Titulo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("ReporteId")
                        .HasName("PK__Reportes__0B29EA4E1546E921");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reportes");
                });

            modelBuilder.Entity("Domain.Entities.Ruta", b =>
                {
                    b.Property<int>("RutaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RutaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RutaId"));

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("NombreRuta")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PuntoFinal")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PuntoInicio")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("RutaId")
                        .HasName("PK__Rutas__7B6199EE25EA8753");

                    b.ToTable("Rutas");
                });

            modelBuilder.Entity("Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Apellido")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Contraseña")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Correo")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TipoUsuario")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UsuarioId")
                        .HasName("PK__Usuarios__2B3DE798F04374E8");

                    b.HasIndex(new[] { "Correo" }, "UQ__Usuarios__60695A19C7AB0A00")
                        .IsUnique()
                        .HasFilter("[Correo] IS NOT NULL");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Domain.Entities.AsignacionesRutum", b =>
                {
                    b.HasOne("Domain.Entities.Camione", "Camion")
                        .WithMany("AsignacionesRuta")
                        .HasForeignKey("CamionId")
                        .HasConstraintName("FK__Asignacio__Camio__60A75C0F");

                    b.HasOne("Domain.Entities.Chofere", "Chofer")
                        .WithMany("AsignacionesRuta")
                        .HasForeignKey("ChoferId")
                        .HasConstraintName("FK__Asignacio__Chofe__5FB337D6");

                    b.HasOne("Domain.Entities.Horario", "Horario")
                        .WithMany("AsignacionesRuta")
                        .HasForeignKey("HorarioId")
                        .HasConstraintName("FK__Asignacio__Horar__5EBF139D");

                    b.Navigation("Camion");

                    b.Navigation("Chofer");

                    b.Navigation("Horario");
                });

            modelBuilder.Entity("Domain.Entities.Horario", b =>
                {
                    b.HasOne("Domain.Entities.Ruta", "Ruta")
                        .WithMany("Horarios")
                        .HasForeignKey("RutaId")
                        .HasConstraintName("FK__Horarios__RutaID__5629CD9C");

                    b.Navigation("Ruta");
                });

            modelBuilder.Entity("Domain.Entities.LogsActividad", b =>
                {
                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany("LogsActividads")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__LogsActiv__Usuar__6477ECF3");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.Reporte", b =>
                {
                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany("Reportes")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Reportes__Usuari__5070F446");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.Camione", b =>
                {
                    b.Navigation("AsignacionesRuta");
                });

            modelBuilder.Entity("Domain.Entities.Chofere", b =>
                {
                    b.Navigation("AsignacionesRuta");
                });

            modelBuilder.Entity("Domain.Entities.Horario", b =>
                {
                    b.Navigation("AsignacionesRuta");
                });

            modelBuilder.Entity("Domain.Entities.Ruta", b =>
                {
                    b.Navigation("Horarios");
                });

            modelBuilder.Entity("Domain.Entities.Usuario", b =>
                {
                    b.Navigation("LogsActividads");

                    b.Navigation("Reportes");
                });
#pragma warning restore 612, 618
        }
    }
}
